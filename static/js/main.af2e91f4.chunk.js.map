{"version":3,"sources":["components/Frases.js","Redux/actions.js","App.js","serviceWorker.js","Redux/initialState.js","Redux/reducers.js","index.js"],"names":["ConnectedComponent","connect","state","quote","author","dispatch","generarFrase","type","_ref","tweetMessage","concat","react_default","a","createElement","id","className","onClick","href","target","rel","App","components_Frases","Component","Boolean","window","location","hostname","match","quotes","num","Math","floor","random","length","appReducer","arguments","undefined","Object","toConsumableArray","newRandomNum","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af2e91f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { nuevaFraseAction } from \"../Redux/actions\";\r\nimport \"../styles/Frases.css\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    quote: state.quote,\r\n    author: state.author\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    generarFrase: () => {\r\n      dispatch(nuevaFraseAction());\r\n    }\r\n  };\r\n};\r\n\r\nconst Frases = ({ quote, author, generarFrase }) => {\r\n  const tweetMessage = `\"${quote}\". %0a -${author}. %23Frase`;\r\n  return (\r\n    <div id=\"quote-box\">\r\n      <div id=\"text\">\r\n        <p> \r\n          <i className=\"fas fa-quote-left\" /> { quote }. <i className=\"fas fa-quote-right\"/> \r\n        </p>\r\n      </div>\r\n      <div id=\"author\">\r\n        <p>\r\n          <i className=\"fas fa-angle-double-right\" /> {author}.\r\n        </p>\r\n      </div>\r\n        <div id=\"new-quote\">\r\n            <button onClick={generarFrase} id=\"button\">\r\n            Â¡Quiero otra frase!\r\n            </button>\r\n        </div>\r\n        <a\r\n            href={\"https://twitter.com/intent/tweet?text=\" + tweetMessage}\r\n            id=\"tweet-quote\"\r\n            target=\"_blank _self\"\r\n            rel=\"noopener noreferrer\"\r\n            >\r\n            <i className=\"fab fa-twitter\" />\r\n        </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ConnectedComponent = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Frases);\r\n\r\nexport default ConnectedComponent;\r\n","export const NUEVA_FRASE = \"NUEVA_FRASE\";\r\n\r\nexport const nuevaFraseAction = () => {\r\n  return {\r\n    type: \"NUEVA_FRASE\"\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Frases from \"./components/Frases\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"container\">\n          <h1 className=\"title\">\n            Generador de frases aleatorias <i className=\"far fa-comment-dots\" />\n          </h1>\n          <Frases />\n          <div className=\"footer\">\n          <p>\n            by <a href=\"https://github.com/Belquira\">belquira <i className=\"fab fa-github-alt\" /></a>\n          </p>\n        </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const quotes = [\r\n  {\r\n    quote:\r\n      \"Lo que pensamos de la muerte sÃ³lo tiene importancia por lo que la muerte nos hace pensar de la vida\",\r\n    author: \"Charles de Gaulle\"\r\n  },\r\n  {\r\n    quote:\r\n      \"Dos cosas son infinitas: la estupidez humana y el universo, y no estoy seguro de lo segundo\",\r\n    author: \"Albert Einstein\"\r\n  },\r\n  {\r\n    quote: \"Los sueÃ±os son las Ãºnicas mentiras que pueden dejar de serlo\",\r\n    author: \"AnÃ³nimo\"\r\n  },\r\n  {\r\n    quote: \"Si crees que la enseÃ±anza es cara, prueba con la ignorancia\",\r\n    author: \"AnÃ³nimo\"\r\n  },\r\n  {\r\n    quote: \"El Ãºnico encanto del pasado consiste en que es el pasado\",\r\n    author: \"Oscar Wilde\"\r\n  },\r\n  {\r\n    quote:\r\n      \"Si asÃ­ fue, asÃ­ pudo ser, si asÃ­ fuera, asÃ­ podrÃ­a ser. pero como no es, no es. Eso es lÃ³gica\",\r\n    author: \"Lewis Carroll\"\r\n  },\r\n  {\r\n    quote:\r\n      \"Nunca olvidÃ©is, discÃ­pulos, que un gobierno opresor es mÃ¡s cruel que un tigre\",\r\n    author: \"Confucio\"\r\n  },\r\n  {\r\n    quote:\r\n      \"Las pasiones hacen vivir al hombre, la sabidurÃ­a sÃ³lo le hace durar\",\r\n    author: \"Nicolas Chamfort\"\r\n  },\r\n  {\r\n    quote: \"Dejamos de temer aquello que se ha aprendido a entender\",\r\n    author: \"Marie Curie\"\r\n  },\r\n  {\r\n    quote: \"La inteligencia busca, pero quien encuentra es el corazÃ³n\",\r\n    author: \"George Sand\"\r\n  },\r\n  {\r\n    quote:\r\n      \"AlgÃºn dÃ­a en cualquier parte, en cualquier lugar indefectiblemente te encontrarÃ¡s a ti mismo, y Ã©sa, sÃ³lo Ã©sa, puede ser la mÃ¡s feliz o la mÃ¡s amarga de tus horas\",\r\n    author: \"Pablo Neruda\"\r\n  },\r\n  {\r\n    quote:\r\n      \"Felicidad no es hacer lo que uno quiere sino querer lo que uno hace.\",\r\n    author: \"Jean Paul Sartre\"\r\n  },\r\n  {\r\n    quote:\r\n      \"El destino de los hombres estÃ¡ hecho de momentos felices, toda la vida los tiene, pero no de Ã©pocas felices\",\r\n    author: \"Friedrich Nietzsche\"\r\n  },\r\n  {\r\n    quote:\r\n      \"No hay medicina que cure lo que no cura la felicidad.\",\r\n    author: \"Gabriel GarcÃ­a MÃ¡rquez\"\r\n  },\r\n  {\r\n    quote:\r\n      \"El que lee mucho y anda mucho, ve mucho y sabe mucho\",\r\n    author: \"Miguel de Cervantes\"\r\n  },\r\n  {\r\n    quote:\r\n      \"Escribir es fÃ¡cil. Lo Ãºnico que tienes que hacer es cruzar las palabras errÃ³neas.-Mark Twain\",\r\n    author: \"Mark Twain\"\r\n  },\r\n  {\r\n    quote:\r\n      \"Cierto que en el mundo de los hombres nada hay necesario, excepto el amor\",\r\n    author: \"Goethe\"\r\n  },\r\n  {\r\n    quote:\r\n      \"El primer paso de la ignorancia es presumir de saber\",\r\n    author: \"Baltasar GraciÃ¡n\"\r\n  }\r\n  \r\n];\r\n\r\nexport default quotes;\r\n","import { NUEVA_FRASE } from \"./actions\";\r\nimport quotes from \"./initialState\";\r\n\r\nconst num = Math.floor(Math.random() * quotes.length);\r\n\r\nconst appReducer = (state = [...quotes], action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state[num];\r\n\r\n    case NUEVA_FRASE: {\r\n      const newRandomNum = Math.floor(Math.random() * quotes.length);\r\n      const newQuote = [...quotes];\r\n      return newQuote[newRandomNum];\r\n    }\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from \"redux\";\nimport appReducer from \"./Redux/reducers\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(appReducer);\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />    \n    </Provider>,\n document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}